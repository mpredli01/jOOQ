/*
 * This file is generated by jOOQ.
*/
package org.redlich.pubs.model.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.redlich.pubs.model.Keys;
import org.redlich.pubs.model.Pubs;
import org.redlich.pubs.model.tables.records.StatesRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class States extends TableImpl<StatesRecord> {

    private static final long serialVersionUID = 983588150;

    /**
     * The reference instance of <code>pubs.states</code>
     */
    public static final States STATES = new States();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StatesRecord> getRecordType() {
        return StatesRecord.class;
    }

    /**
     * The column <code>pubs.states.id</code>.
     */
    public final TableField<StatesRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>pubs.states.version</code>.
     */
    public final TableField<StatesRecord, Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>pubs.states.state</code>.
     */
    public final TableField<StatesRecord, String> STATE = createField("state", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>pubs.states.mnemonic</code>.
     */
    public final TableField<StatesRecord, String> MNEMONIC = createField("mnemonic", org.jooq.impl.SQLDataType.VARCHAR.length(2), this, "");

    /**
     * Create a <code>pubs.states</code> table reference
     */
    public States() {
        this("states", null);
    }

    /**
     * Create an aliased <code>pubs.states</code> table reference
     */
    public States(String alias) {
        this(alias, STATES);
    }

    private States(String alias, Table<StatesRecord> aliased) {
        this(alias, aliased, null);
    }

    private States(String alias, Table<StatesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Pubs.PUBS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<StatesRecord, Long> getIdentity() {
        return Keys.IDENTITY_STATES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<StatesRecord> getPrimaryKey() {
        return Keys.KEY_STATES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<StatesRecord>> getKeys() {
        return Arrays.<UniqueKey<StatesRecord>>asList(Keys.KEY_STATES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public States as(String alias) {
        return new States(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public States rename(String name) {
        return new States(name, null);
    }
}
