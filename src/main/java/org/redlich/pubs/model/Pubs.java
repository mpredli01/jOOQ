/*
 * This file is generated by jOOQ.
*/
package org.redlich.pubs.model;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;
import org.redlich.pubs.model.tables.Authors;
import org.redlich.pubs.model.tables.Publications;
import org.redlich.pubs.model.tables.Publishers;
import org.redlich.pubs.model.tables.States;
import org.redlich.pubs.model.tables.Types;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Pubs extends SchemaImpl {

    private static final long serialVersionUID = -202515350;

    /**
     * The reference instance of <code>pubs</code>
     */
    public static final Pubs PUBS = new Pubs();

    /**
     * The table <code>pubs.authors</code>.
     */
    public final Authors AUTHORS = org.redlich.pubs.model.tables.Authors.AUTHORS;

    /**
     * The table <code>pubs.publications</code>.
     */
    public final Publications PUBLICATIONS = org.redlich.pubs.model.tables.Publications.PUBLICATIONS;

    /**
     * The table <code>pubs.publishers</code>.
     */
    public final Publishers PUBLISHERS = org.redlich.pubs.model.tables.Publishers.PUBLISHERS;

    /**
     * The table <code>pubs.states</code>.
     */
    public final States STATES = org.redlich.pubs.model.tables.States.STATES;

    /**
     * The table <code>pubs.types</code>.
     */
    public final Types TYPES = org.redlich.pubs.model.tables.Types.TYPES;

    /**
     * No further instances allowed
     */
    private Pubs() {
        super("pubs", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Authors.AUTHORS,
            Publications.PUBLICATIONS,
            Publishers.PUBLISHERS,
            States.STATES,
            Types.TYPES);
    }
}
